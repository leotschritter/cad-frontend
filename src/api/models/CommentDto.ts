/* tslint:disable */
/* eslint-disable */
/**
 * Travel App API
 * API for managing travel itineraries, locations, and social interactions
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CommentDto
 */
export interface CommentDto {
    /**
     * 
     * @type {string}
     * @memberof CommentDto
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof CommentDto
     */
    userEmail?: string;
    /**
     * 
     * @type {number}
     * @memberof CommentDto
     */
    itineraryId?: number;
    /**
     * 
     * @type {string}
     * @memberof CommentDto
     */
    comment?: string;
    /**
     * 
     * @type {Date}
     * @memberof CommentDto
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the CommentDto interface.
 */
export function instanceOfCommentDto(value: object): value is CommentDto {
    return true;
}

export function CommentDtoFromJSON(json: any): CommentDto {
    return CommentDtoFromJSONTyped(json, false);
}

export function CommentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommentDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'userEmail': json['userEmail'] == null ? undefined : json['userEmail'],
        'itineraryId': json['itineraryId'] == null ? undefined : json['itineraryId'],
        'comment': json['comment'] == null ? undefined : json['comment'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
    };
}

export function CommentDtoToJSON(json: any): CommentDto {
    return CommentDtoToJSONTyped(json, false);
}

export function CommentDtoToJSONTyped(value?: CommentDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'userEmail': value['userEmail'],
        'itineraryId': value['itineraryId'],
        'comment': value['comment'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
    };
}

